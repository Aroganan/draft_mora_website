---
export const prerender = false;
import Layout from "../../layouts/Layout.astro";
import Footer from "../../sections/16-footer.astro";

import NavigationBar from "../../sections/1-navigation-bar.astro";
import { isSupportedLanguage, useTranslations } from "../../i18n/utils";

const { lang } = Astro.params;

if (!isSupportedLanguage(lang)) {
	return;
}
const t = useTranslations(lang);

const nicNumber = Astro.url.searchParams.get("nic") || undefined;

let selectedNic = undefined;
function formatKey(key: string) {
	if (key == "nic_number") {
		return "NIC Number";
	}
	if (key.includes("_")) {
		return key
			.split("_")
			.map((word) => formatKey(word))
			.join(" ");
	}
	return key.charAt(0).toUpperCase().concat(key.slice(1));
}
---

<Layout pageTitle={t("index__title")}>
	<div class="bg-purple-800">
		<NavigationBar />
	</div>
	<section
		class="min-h-screen bg-delft-blue-50/50 text-primary-900 flex justify-center"
	>
		<div
			class="max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1"
		>
			<div class="lg:w1/2 xl:w-5/12 p-6 sm:p-12 flex-1">
				<div class="mt-6 ml-12 flex flex-col items-center justify-center">
					<h1 class="text-3xl xl:text-4xl text-center">
						{t("find_your_results")}
					</h1>
					<p class="text-xl xl:text-2xl text-center text-black max-w-prose">
						{t("find_your_results_p")}
					</p>
					<!-- <form
						method="get"
						action={`/${lang}/find-your-index-number`}
						style="display: contents;"
					> -->
					<div>
						<input
							class="w-full max-w-2xl px-8 py-4 rounded-lg bg-delft-blue-50/25 border border-primary-900/20 placeholder-rust-orange-50 text-md focus:outline-none focus:border-gray focus:bg-white mt-4"
							type="text"
							name="nic"
							id="showresultin"
							value={nicNumber}
							placeholder={t("nic_no")}
						/>
						<button
							id="showresultbtn"
							class="my-6 py-2 px-5 rounded-full text-primary-800 text-xl bg-white hover:bg-delft-blue-50/50 border border-sm border-black/25 focus:outline-none focus:shadow focus:border-none"
						>
							<i class="fa-solid fa-magnifying-glass"></i><span class="ml-3"
								>{t("find_button")}</span
							>
						</button>
					</div>
					<!-- </form> -->
					{
						typeof selectedNic == "undefined" ? null : selectedNic == null ? (
							<div
								style="color: red; text-align: center;"
								class="text-center mt-5"
							>
								Not found
							</div>
						) : (
							<table>
								{Object.entries(selectedNic).map(([key, value]) => {
									return (
										<tr>
											<td>{formatKey(key)}</td>
											<td>{value}</td>
										</tr>
									);
								})}
							</table>
						)
					}
				</div>
			</div>
			<div class="lg:flex hidden max-w-[700px]">
				<div
					class="mr-14 min-w-[240px] w-full bg-contain bg-center bg-no-repeat max-h-screen"
					style="background-image: url('/assets/Illustrations/bg23.svg');"
				>
				</div>
			</div>
		</div>
	</section>
</Layout>
<!-- <div class="p-2 sm:mx-[30px]">
	<Footer />
</div> -->

<script>
	import { db, applicants } from "../../db";
	import { eq } from "drizzle-orm";

	// const get_result = async (
	// 	nic_number: string,
	// ): Promise<{ id: string; name: string; medium: string; nic: string }[]> => {
	// 	const result = await db.query.applicants.findMany({
	// 		where: eq(applicants.nic, nic_number),
	// 	});
	// 	return result;
	// };

	const showResultButton = document.getElementById("showresultbtn");
	console.log(showResultButton);
	showResultButton.addEventListener("click", async function () {
		console.log("click");
		const showResultInput = document.getElementById(
			"showresultin",
		) as HTMLInputElement;

		if (!(showResultInput instanceof HTMLInputElement)) {
			console.error("showResultInput is not found or not an input");
			return;
		}

		var nic_number = showResultInput.value;

		// const result = await get_result(nic_number);

		const result = await db.query.applicants.findFirst({
			where: eq(applicants.nic, nic_number),
		});

		console.log(result);
		alert("Button was clicked! " + result.name);
	});
</script>

<style>
	@media screen and (max-width: 400px) {
		input {
			font-size: 16px;
		}
	}
	table {
		width: 100%;
	}
</style>
