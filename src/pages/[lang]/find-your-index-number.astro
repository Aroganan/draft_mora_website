---
export const prerender = false;
import Layout from "../../layouts/Layout.astro";
import Footer from "../../sections/16-footer.astro";

import NavigationBar from "../../sections/1-navigation-bar.astro";
import { isSupportedLanguage, useTranslations } from "../../i18n/utils";
import { db, applicants } from "../../db";
import { eq } from "drizzle-orm";

const { lang } = Astro.params;

if (!isSupportedLanguage(lang)) {
	return;
}
const t = useTranslations(lang);

const nicNumber = Astro.url.searchParams.get("nic") || undefined;

let selectedNic = undefined;

function formatKey(key: string) {
	if (key == "nic_number") {
		return "NIC Number";
	}
	if (key.includes("_")) {
		return key
			.split("_")
			.map((word) => formatKey(word))
			.join(" ");
	}
	return key.charAt(0).toUpperCase().concat(key.slice(1));
}

if (nicNumber) {
	const result = await db.query.applicants
		.findFirst({
			where: eq(applicants.nic, nicNumber),
		})
		.catch(console.error);
	selectedNic = result;
	console.log(result);

	// const u = new URL(Astro.url);
	// u.pathname = "/student-info.csv";
	// const response = await fetch(u);
	// const body = await response.text();
	// const parser = parse();

	// let headers: Array<string>;
	// selectedNic = await new Promise((resolve, reject) => {
	// 	// @ts-ignore
	// 	parser.on("readable", function () {
	// 		let record;
	// 		// @ts-ignore
	// 		while ((record = parser.read()) !== null) {
	// 			if (!headers) {
	// 				headers = record;
	// 				continue;
	// 			}
	// 			const obj = Object.fromEntries(headers.map((_, i) => [_, record[i]]));
	// 			if (obj["nic_no"] == nicNumber) {
	// 				console.log("found", obj["nic_no"]);

	// 				resolve({
	// 					index_no: obj["index_no"],
	// 					name: obj["first_name"]
	// 						.trim()
	// 						.concat(" ", obj["last_name"].trim())
	// 						.toUpperCase(),
	// 					nic_number: obj["nic_no"],
	// 					exam_centre: obj["exam_centre"],
	// 				});
	// 				return;
	// 			}
	// 		}
	// 		resolve(null);
	// 	});
	// 	// @ts-ignore
	// 	parser.write(body);
	// });

	// const body = (await response.text()).split("\n");
	// console.log(headers);

	// for (let i = 1; i < body.length; i++) {
	// 	const line = body[i];
	// 	const d = line.split(",");
	// 	console.log(d);
	// 	csvParser({});
	// }
}
console.log(selectedNic);
---

<Layout pageTitle={t("index__title")}>
	<div class="bg-purple-800">
		<NavigationBar />
	</div>
	<!-- <h3 class="text-base sm:text-2xl md:text-3xl flex flex-col text-center pt-5">
		Find your Index Number
	</h3>
	<div
		class="bg-[#9e57b5] pb-60 md:mx-[20%] rounded-xl flex flex-col items-center md:pt-20"
	>
		<p class="md:text-2xl text-center">
			Enter your NIC Number to find your Index Number.
		</p>

		<input
			type="number"
			class="h-8 sm:h-6 md:h-12 rounded-lg sm:text-sm md:text-lg w-[150px] sm:w-[500px] md:w-[60%]"
			placeholder=" Enter the NIC Number"
		/>
		<button class="h-8 sm:h-12 rounded-lg text-xl mt-4 md:w-[100px]"
			>Find</button
		>
	</div> -->
	<!--	<div
		class="flex flex-col items-center bg-white shadow rounded-xl mt-[30px] pb-5 sm:my-10 md:p-10 md:pb-20 md:mt-28 md:mb-20 gap-y-2 w-fit mx-auto"
	>
		<h1 class="text-xl text-center px-3 my-5 sm:text-2xl md:text-4xl">
			Find your Index Number
		</h1>
		<p class="text-lg text-center px-3 m-0 sm:text-sm">
			Enter your NIC Number to find your Index Number.
		</p>
		<input
			type="text"
			placeholder="NIC Number"
			class="px-8 p-2 rounded-lg text-sm sm:text-sm border-none bg-delft-blue-50 focus:outline-none focus:border-delft-blue-500 focus:bg-white  shadow mt-2"
		/>
		<button class="px-8 pt-1 h-fit text-lg rounded-full border-none sm:text-xl mt-4"
			>Find</button
		>
	</div> -->

	<section
		class="min-h-screen bg-delft-blue-50/50 text-primary-900 flex justify-center"
	>
		<div
			class="max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1"
		>
			<div class="lg:w1/2 xl:w-5/12 p-6 sm:p-12 flex-1">
				<div class="mt-6 ml-12 flex flex-col items-center justify-center">
					<h1 class="text-3xl xl:text-4xl text-center">
						{t("find_your_index_no")}
					</h1>
					<p class="text-xl xl:text-2xl text-center text-black max-w-prose">
						{t("find_your_index_no_p")}
					</p>
					<form
						method="get"
						action={`/${lang}/find-your-index-number`}
						style="display: contents;"
					>
						<input
							class="w-full max-w-2xl px-8 py-4 rounded-lg bg-delft-blue-50/25 border border-primary-900/20 placeholder-rust-orange-50 text-md focus:outline-none focus:border-gray focus:bg-white mt-4"
							type="text"
							name="nic"
							value={nicNumber}
							placeholder={t("nic_no")}
						/>
						<button
							class="my-6 w-1/2 py-2 rounded-full text-primary-800 text-xl bg-white hover:bg-delft-blue-50/50 border border-sm border-black/25 focus:outline-none focus:shadow focus:border-none"
						>
							<i class="fa-solid fa-magnifying-glass"></i><span class="ml-3"
								>{t("find_button")}</span
							>
						</button>
					</form>
					{
						typeof selectedNic == "undefined" ? null : selectedNic == null ? (
							<div
								style="color: red; text-align: center;"
								class="text-center mt-5"
							>
								Not found
							</div>
						) : (
							<table>
								{Object.entries(selectedNic).map(([key, value]) => {
									return (
										<tr>
											<td>{formatKey(key)}</td>
											<td>{value}</td>
										</tr>
									);
								})}
							</table>
						)
					}
				</div>
			</div>
			<div class="lg:flex hidden max-w-[700px]">
				<div
					class="mr-14 min-w-[240px] w-full bg-contain bg-center bg-no-repeat max-h-screen"
					style="background-image: url('/assets/Illustrations/bg23.svg');"
				>
				</div>
			</div>
		</div>
	</section>
</Layout>
<div class="p-2 sm:mx-[30px]">
	<Footer />
</div>
<style>
	@media screen and (max-width: 400px) {
		input {
			font-size: 16px;
		}
	}
	table {
		width: 100%;
	}
</style>
